name: CI
on:
    push:
        branches:
            - main
jobs:
    tests:
        runs-on: ubuntu-latest
        name: Tests
        strategy:
            fail-fast: true
            matrix:
                php-versions: [ '8.1' ]
        services:
            postgres:
                image: postgres:latest
                env:
                    POSTGRES_DB: simple_blog
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_USER: postgres
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            -   name: 'Checkout'
                uses: actions/checkout@v2

            # Setup PHP
            -   name: Setup PHP, extensions and composer
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-versions }}
                    extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_pgsql, dom, filter, gd, iconv, json
            -   name: Report PHP version
                run: php -v

            # Yarn
            -   name: Yarn install
                uses: actions/setup-node@v2
                with:
                    node-version: '18'
            -   run: yarn install
            -   name: Yarn build
                run: yarn run encore production

            # Composer
            -   name: Validate composer.json and composer.lock
                run: composer validate --strict

            -   name: Install Composer dependencies
                run: composer install --no-interaction --no-progress --no-suggest

            # PHPStan
            -   name: Static analysis of PHP code (PHPStan)
                run: php vendor/bin/phpstan analyse -l 9 src

            -   name: Setup database
                run: |
                    php bin/console doctrine:database:create --env=test
                    php bin/console doctrine:migrations:migrate --no-interaction --env=test

            # Fixtures
            -   name: Load fixtures
                run: php bin/console hautelook:fixtures:load --no-interaction --env=test

            # Tests
            -   name: Run tests
                run: php bin/phpunit

    deploy:
        runs-on: ubuntu-latest
        name: Deployment
        environment: production
        env:
            APP_ENV: prod
        strategy:
            fail-fast: true
            matrix:
                php-versions: [ '8.1' ]
        steps:

            -   name: 'Checkout'
                uses: actions/checkout@v2

            -   name: Setup PHP, extensions and composer
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-versions }}
                    extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_pgsql, dom, filter, gd, iconv, json
            -   name: Report PHP version
                run: php -v

            -   name: Install Composer dependencies
                run: composer install --no-dev --optimize-autoloader

            -   name: Yarn install
                uses: actions/setup-node@v2
                with:
                    node-version: '18'
            -   run: yarn install
            -   name: Yarn build
                run: yarn run encore production

            -   name: Deploy to Prod server
                uses: easingthemes/ssh-deploy@main
                env:
                    SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
                    SOURCE: ''
                    REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
                    REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
                    REMOTE_USER: ${{ secrets.REMOTE_USER }}
                    TARGET: ${{ secrets.REMOTE_TARGET }}
                    EXCLUDE: "/.git, /.github, /.idea, /.php-version, /.yarn, /fixtures, /node_modules, /scripts, /tests, /var, /.env, /.env.local, /.env.test, /.gitignore, /.phpversion, /.phpunit.result.cache, /.yarnrc.yml, /package.json, /phpunit.xml.dist, /symfony.lock, /tsconfig.json, /webpack.config.js, /yarn.lock"

            -   name: Run migrations
                uses: appleboy/ssh-action@dce9d565de8d876c11d93fa4fe677c0285a66d78
                with:
                    host: ${{ secrets.REMOTE_HOST }}
                    username: ${{ secrets.REMOTE_USER }}
                    key: ${{ secrets.SSH_PRIVATE_KEY2 }}
                    port: ${{ secrets.REMOTE_PORT }}
                    script: |
                        cd ${{ secrets.REMOTE_TARGET }}
                        php bin/console doctrine:migrations:migrate